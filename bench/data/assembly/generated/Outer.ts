// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v0.9.2
//   protoc        v3.20.3

import { Writer, Reader } from "@asterai/as-proto/assembly";

export class Outer {
  static encode(message: Outer, writer: Writer): void {
    const bool = message.bool;
    if (bool.length !== 0) {
      for (let i: i32 = 0; i < bool.length; ++i) {
        writer.uint32(8);
        writer.bool(bool[i]);
      }
    }

    writer.uint32(17);
    writer.double(message.double);
  }

  static decode(reader: Reader, length: i32): Outer {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new Outer();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.bool.push(reader.bool());
          break;

        case 2:
          message.double = reader.double();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  bool: Array<bool>;
  double: f64;

  constructor(bool: Array<bool> = [], double: f64 = 0.0) {
    this.bool = bool;
    this.double = double;
  }
}
