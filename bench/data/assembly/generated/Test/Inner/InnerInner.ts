// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v0.9.2
//   protoc        v3.20.3

import { Writer, Reader } from "as-proto/assembly";
import { Enum } from "../Enum";

export class InnerInner {
  static encode(message: InnerInner, writer: Writer): void {
    writer.uint32(8);
    writer.int64(message.long);

    writer.uint32(16);
    writer.int32(message.enum);

    writer.uint32(24);
    writer.sint32(message.sint32);
  }

  static decode(reader: Reader, length: i32): InnerInner {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new InnerInner();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.long = reader.int64();
          break;

        case 2:
          message.enum = reader.int32();
          break;

        case 3:
          message.sint32 = reader.sint32();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  long: i64;
  enum: Enum;
  sint32: i32;

  constructor(long: i64 = 0, enum_: Enum = 0, sint32: i32 = 0) {
    this.long = long;
    this.enum = enum_;
    this.sint32 = sint32;
  }
}
